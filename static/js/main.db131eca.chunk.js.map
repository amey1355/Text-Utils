{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","class","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","spellCheck","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db131eca.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\" >\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-a\" href=\"/about\">{props.aboutText}</a>\r\n                        </li> */}\r\n\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label class =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About text here'\r\n};\r\n\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.setSelectionRange(0,9000);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n    \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n\r\n    //Made a text State\r\n    const [text, setText] = useState('');\r\n    //Made a text State\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading} </h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} spellCheck=\"false\" id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your text Summary</h2>\r\n                <p>{text.split(\" \").length} words, {text.length} characters </p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert &&\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now!\";\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}></Alert>\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n      </div>\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}